Powershell to look at log and send email notification
-----------------------------------------------------------------------------------------------------------

$PATH="C:\temp\test.txt"
$failedRows = Get-Content $PATH -Tail 50 | Where-Object { $_.Contains("fail") }
# Email to SMTP server sorted and working

$From = "athambiraj@moccae.gov.ae"
$To = "athambiraj@moccae.gov.ae"
$Subject = "Failed notification"
$Body = "This is what I want to say"
$SMTPServer = "smtp.fednet.gov.ae"
$SMTPPort = "25"
if( $failedRows -and $failedRows.Length -gt 0) {
    Send-MailMessage -From $From -to $To -Subject $Subject -Body $Body -SmtpServer $SMTPServer -port $SMTPPort
}


----------------------------------------------------------------------------------------------------------------------------
Send-MailMessage -from athambiraj@moccae.gov.ae -to "athambiraj@moccae.gov.ae" -subject "test" -body "test" -Attachment "C:\temp\test.txt" -smtpServer 172.17.1.155

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

$logDir = "C:\Program Files (x86)\Tickmill MT4 Client Terminal\MQL4\Logs\"

function Send-ToEmail([string]$email){
    $user = "sender@email.com"
    $pass = ConvertTo-SecureString -String "PASSWORD" -AsPlainText -Force
    $cred = New-Object System.Management.Automation.PSCredential $user, $pass
    $body = ":("
    $mailParam = @{
        To = "sender@email.com"
        From = "ALERT ALERT <Reciever@email.com>"
        Subject = "ALERT : #tail last line"
        Body = $body 
        SmtpServer = "smtp.gmail.com"
        Port = 587
        Credential = $cred
        #Attachments = "none"     
    }

    # Send the email with all parameters
    Send-MailMessage @mailParam -UseSsl
 }

# create a variable to store the previous log line in
$previousLogLine = ''
while ($true) {
    $latestLog = Get-ChildItem -Path $logDir -Filter '*.log' | Sort-Object LastWriteTime -Descending | Select-Object -First 1
    Write-Host "Reading from $($latestLog.Name)"

    $logLine = Get-Content -Path $latestLog.FullName -Tail 1
    # if this line is different from the previously stored line
    # and it contains either "sell" or "buy", then send the email
    if ($logLine -ne $previousLogLine -and $logLine -match 'sell|buy') { 
        Send-ToEmail -email "receiver@email.com"
        # remember this line to compare with the line we get in the next iteration
        $previousLogLine = $logLine
    }

    Start-Sleep -Seconds 2
}

-----------------------------------------------------------------------------------------------------
